<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!--导入属性配置-->
    <properties resource="mybatis/mbg.properties"/>

    <!-- 指定数据连接驱动jar地址 -->
    <!--<classPathEntry-->
            <!--location="${jdbc.driverLocation}"/>-->
    <!-- 一个数据库一个context -->
    <context id="litemall" targetRuntime="MyBatis3">

        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
            一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖
         -->
        <property name="autoDelimitKeywords" value="false"/>
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!-- 改造，针对mybatis生成的SQL映射文件（xml文件），false为覆盖，true为追加 -->
        <property name="mergeable" value="false"></property>

        <!--ToStringPlugin-->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"></plugin>

        <!--SerializablePlugin-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>

<!--        &lt;!&ndash;RenameExampleClassPlugin&ndash;&gt;-->
<!--        <plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin">-->
<!--            <property name="searchString" value="Example$"></property>-->
<!--            <property name="replaceString" value="Criteria"></property>-->
<!--        </plugin>-->

<!--        &lt;!&ndash;RenameJavaMapperClassPlugin&ndash;&gt;-->
<!--        <plugin type="org.mybatis.generator.plugins.RenameJavaMapperClassPlugin">-->
<!--            <property name="searchString" value="Mapper$"></property>-->
<!--            <property name="replaceString" value="Dao"></property>-->
<!--        </plugin>-->

<!--        &lt;!&ndash;RenameXmlMapperFilePlugin&ndash;&gt;-->
<!--        <plugin type="org.mybatis.generator.plugins.RenameXmlMapperFilePlugin">-->
<!--            <property name="searchString" value="Mapper"></property>-->
<!--            <property name="replaceString" value="Dao"></property>-->
<!--        </plugin>-->

        <!-- 为了防止生成的代码中有很多注释，比较难看，加入下面的配置控制 -->
        <commentGenerator>
            <property name="suppressAllComments" value="true"></property>
            <property name="suppressDate" value="true"></property>
        </commentGenerator>
        <!-- 注释控制完毕 -->

        <!-- jdbc连接 -->
        <jdbcConnection driverClass="${jdbc.driver}"
                        connectionURL="${jdbc.url}"
                        userId="${jdbc.userName}"
                        password="${jdbc.passWord}"/>

        <!-- 类型转换 -->
        <javaTypeResolver>
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成实体类的包名和位置 注意targetProject的值为实体类放在工程中具体位置的相对路径，-->
        <javaModelGenerator targetPackage="${javaModelGenerator.targetPackage}"
                            targetProject="${javaModelGenerator.targetProject}">
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="true"/>
            <!-- 是否针对string类型的字段在set的时候进行trim调用 -->
            <property name="trimStrings" value="true"/>
            <!-- 是否对model添加 构造函数 -->
            <!--<property name="constructorBased" value="true"/>-->
        </javaModelGenerator>

        <!-- 生成的SQLMapper映射文件包名和位置 -->
        <sqlMapGenerator targetPackage="${sqlMapGenerator.targetPackage}"
                         targetProject="${sqlMapGenerator.targetProject}">
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 生成mapper接口dao文件位置，这里配置将生成的dao类放在me.gacl.dao这个包下 -->
        <javaClientGenerator targetPackage="${javaClientGenerator.targetPackage}"
                             targetProject="${javaClientGenerator.targetProject}" type="XMLMAPPER">
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>
<!--        <table schema="${table.schema}" tableName="t_ads_info" domainObjectName="AdsInfo"></table>-->
<!--        <table schema="${table.schema}" tableName="t_api_service_log" domainObjectName="ApiServiceLog"></table>-->
<!--        <table schema="${table.schema}" tableName="t_beltline" domainObjectName="BeltLine"></table>-->
<!--        <table schema="${table.schema}" tableName="t_brand_info" domainObjectName="BrandInfo"></table>-->
<!--        <table schema="${table.schema}" tableName="t_cage_lever_change" domainObjectName="CageLeverChange"></table>-->
<!--        <table schema="${table.schema}" tableName="t_category_info" domainObjectName="CategoryInfo"></table>-->
<!--        <table schema="${table.schema}" tableName="t_complaint_info" domainObjectName="ComplaintInfo"></table>-->
<!--        <table schema="${table.schema}" tableName="t_dumping_info" domainObjectName="DumpingInfo"></table>-->
<!--        <table schema="${table.schema}" tableName="t_enterprise_info" domainObjectName="EnterpriseInfo"></table>-->
<!--        <table schema="${table.schema}" tableName="t_enterprise_qualif_info" domainObjectName="EnterpriseQualifInfo"></table>-->
<!--        <table schema="${table.schema}" tableName="t_group_info" domainObjectName="GroupInfo"></table>-->
<!--        <table schema="${table.schema}" tableName="t_product_info" domainObjectName="ProductInfo"></table>-->
        <table schema="${table.schema}" tableName="t_source_code" domainObjectName="SourceCode"></table>
<!--        <table schema="${table.schema}" tableName="t_source_query_log" domainObjectName="SourceQueryLog"></table>-->
<!--        <table schema="${table.schema}" tableName="t_spray_gun" domainObjectName="SprayGun"></table>-->
<!--        <table schema="${table.schema}" tableName="t_storage_info" domainObjectName="StorageInfo"></table>-->
<!--        <table schema="${table.schema}" tableName="t_sys_notice" domainObjectName="SysNoticeSY"></table>-->
<!--        <table schema="${table.schema}" tableName="t_sys_notice_red" domainObjectName="SysNoticeRedSY"></table>-->
<!--        <table schema="${table.schema}" tableName="t_warehousing_entry" domainObjectName="WarehousingEntry"></table>-->
<!--        <table schema="${table.schema}" tableName="t_warehousing_entry_detail" domainObjectName="WarehousingEntryDetail"></table>-->
<!--        <table schema="${table.schema}" tableName="t_warehousing_entry_filing" domainObjectName="WarehousingEntryFiling"></table>-->
<!--        <table schema="${table.schema}" tableName="t_base_area_admin" domainObjectName="BaseAreaAdmin"></table>-->
    </context>
</generatorConfiguration>