<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.3.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

    <!-- 自动扫描且只扫描@Controller -->
    <!-- use-default-filters
        use-default-filters 属性的默认值为 true，即使用默认的 Filter 进行包扫描，
        而默认的 Filter 对标有 @Service,@Controller和@Repository 的注解的类进行扫描，
        spring-servlet.xml 只来控制controller的跳转逻辑，所以只配置扫描 @Controllerce 注解标注的类，
        不让它扫描其余注解标注的类，所以设置了 use-default-filters 为 false，
        并使用 context:include-filter 子标签设置其只扫描带有 @Controller 注解标注的类。
    -->
    <context:component-scan base-package="cn.jiayuli.**.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- JSR303 Validator定义 -->
    <!-- spring提供的bean validator接口配置  -->
    <!--<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>
    </bean>-->
    <!--注解驱动，此句必须加上validator属性指向beanvalidator的bean中的id-->
    <!--<mvc:annotation-driven validator="validator"/>-->

    <!-- 定义无需Controller的url<->view直接映射 -->
<!--    <mvc:view-controller path="/" view-name="/index"/>-->

<!--    <import resource="classpath*:spring-servlet-default.xml"/>-->

    <mvc:annotation-driven />
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/css/**" location="/css/"/>
    <mvc:resources mapping="/image/**" location="/image/"/>
    <mvc:resources mapping="/html/**" location="/html/"/>

</beans>